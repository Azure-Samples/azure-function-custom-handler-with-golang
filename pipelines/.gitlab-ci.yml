image: golang:1.17.6

variables:
  REPO_NAME: $REPO_NAME
  APPLICATION_ID: $APPLICATION_ID
  APPLICATION_SECRET: $APPLICATION_SECRET
  TENANT_ID: $TENANT_ID
  FUNCTION_APP: $FUNCTION_APP

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - deploy

unit_tests:
  stage: test
  script:
    - make test

code_coverage:
  stage: test
  script:
    - make coverage

lint:
  stage: test
  script:
    - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.43.0
    - make lint

build:
  stage: build
  artifacts:
    untracked: true
  script:
    - make build_linux

deploy:
  stage: deploy
  before_script:
    - export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
  script:
    - curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    - wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.asc.gpg
    - mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
    - wget -q https://packages.microsoft.com/config/debian/11/prod.list
    - mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
    - chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
    - chown root:root /etc/apt/sources.list.d/microsoft-prod.list
    - apt-get update && apt-get -y install --no-install-recommends azure-functions-core-tools-3
    - az login --service-principal -u $APPLICATION_ID -p $APPLICATION_SECRET --tenant $TENANT_ID
    - func azure functionapp publish $FUNCTION_APP --custom
  dependencies:
    - build
  only:
    - main